# name: Terraform Template

# on:
#   workflow_call:
#     inputs:
#       tf_working_dir:
#         required: true
#         type: string
#       apply:
#         required: false
#         type: boolean
#         default: false
#     secrets:
#       AZURE_CLIENT_ID:
#         required: true
#       AZURE_TENANT_ID:
#         required: true
#       AZURE_SUBSCRIPTION_ID:
#         required: true

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.6.0

#       - name: Azure Login
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZURE_CLIENT_ID }}
#           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

#       - name: Terraform Init
#         working-directory: ${{ inputs.tf_working_dir }}
#         env:
#           STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
#           CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
#           RESOURCE_GROUP_NAME: ${{ secrets.RESOURCE_GROUP_NAME }}
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#         run: terraform init -backend-config="storage_account_name=stgariyansdemo" -backend-config="container_name=tfstate" -backend-config="resource_group_name=$RESOURCE_GROUP_NAME"

#       - name: Terraform Format Check
#         working-directory: ${{ inputs.tf_working_dir }}
#         env:
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_USE_AZUREAD: true
#         run: terraform fmt -check -recursive

#       - name: Terraform Validate
#         working-directory: ${{ inputs.tf_working_dir }}
#         env:
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_USE_AZUREAD: true
#         run: terraform validate

#       - name: Terraform Plan
#         working-directory: ${{ inputs.tf_working_dir }}
#         env:
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_USE_AZUREAD: true
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         if: ${{ inputs.apply && github.ref == 'refs/heads/main' }}
#         working-directory: ${{ inputs.tf_working_dir }}
#         env:
#           ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           ARM_USE_AZUREAD: true
#         run: terraform apply -auto-approve tfplan
